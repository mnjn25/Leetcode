unordered_map<int, int> index;
TreeNode* func(vector<int>& inorder, int is, int ie, vector<int>& preorder, int& ps){
      if(is > ie || k >= preorder.size()) return nullptr;
      
      TreeNode *root = new TreeNode(preorder[k]);
      int ind = index[preorder[k]];
      int left = ind - is;
      
      root->left = func(inorder, is, ind - 1, preorder, ++k);
      root->right = func(inorder, ind + 1, ie, preorder, ++k);
      
      return root;
}
TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder){
      for(int i = 0; i< inorder.size(); ++i){
            index[inorder[i]] = i;
      }
      int k = 0;
      return func(inorder, 0, inorder.size() - 1, preorder, k);
}
